spring.application.name=api-gateway


server.port=5001
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

#notification service
spring.cloud.gateway.routes[0].id=notification-service
spring.cloud.gateway.routes[0].uri=lb://NOTIFICATION-SERVICE
spring.cloud.gateway.routes[0].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[0].filters[0].args.name=notification-service
spring.cloud.gateway.routes[0].filters[0].args.fallbackUri=forward:/fallback
spring.cloud.gateway.routes[0].filters[1].name=Retry
spring.cloud.gateway.routes[0].filters[1].args.retries=3
spring.cloud.gateway.routes[0].filters[1].args.methods=GET
# firstBackoff will retry every 5ms
spring.cloud.gateway.routes[0].filters[1].args.backoff.firstBackoff=10ms
spring.cloud.gateway.routes[0].filters[1].args.backoff.maxBackoff=50ms
spring.cloud.gateway.routes[0].filters[2]=DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
spring.cloud.gateway.routes[0].predicates[0]=Path=/v1/ndi/**,/notification/**, /ws-notification/**, /topic/**



eureka.client.serviceUrl.defaultZone=http://sa:feroz12345@localhost:8761/eureka/

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true
eureka.instance.hostname=localhost
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

fallbackResponse=Fallback Called
spring.frontend.client=http://192.168.3.92:4200/,http://192.168.3.58:4200/,http://192.168.3.19,http://192.168.3.38


# supply order service
spring.cloud.gateway.routes[1].id=supply-order-service
spring.cloud.gateway.routes[1].uri=lb://supply-order-service
spring.cloud.gateway.routes[1].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[1].filters[0].args.name=supply-order-service
spring.cloud.gateway.routes[1].filters[0].args.fallbackUri=forward:/fallback
spring.cloud.gateway.routes[1].filters[1].name=Retry
spring.cloud.gateway.routes[1].filters[1].args.retries=3
spring.cloud.gateway.routes[1].filters[1].args.methods=GET
# firstBackoff will retry every 5ms
spring.cloud.gateway.routes[1].filters[1].args.backoff.firstBackoff=10ms
spring.cloud.gateway.routes[1].filters[1].args.backoff.maxBackoff=50ms
spring.cloud.gateway.routes[1].filters[2]=DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
spring.cloud.gateway.routes[1].predicates[0]=Path=/supply-order/api/v1/**,/supply-order/**

spring.cloud.gateway.routes[2].id=internal-api
spring.cloud.gateway.routes[2].uri=lb://internal-api
spring.cloud.gateway.routes[2].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[2].filters[0].args.name=internal-api
spring.cloud.gateway.routes[2].filters[0].args.fallbackUri=forward:/fallback
spring.cloud.gateway.routes[2].filters[1].name=Retry
spring.cloud.gateway.routes[2].filters[1].args.retries=3
spring.cloud.gateway.routes[2].filters[1].args.methods=GET
# firstBackoff will retry every 5ms
spring.cloud.gateway.routes[2].filters[1].args.backoff.firstBackoff=10ms
spring.cloud.gateway.routes[2].filters[1].args.backoff.maxBackoff=50ms
spring.cloud.gateway.routes[2].filters[2]=DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
spring.cloud.gateway.routes[2].predicates[0]=Path=/internal-service/api/**
